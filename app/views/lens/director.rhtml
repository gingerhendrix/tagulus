<style>
div.tagCloud {
    width: 320px;
    padding: 10px;
    margin: 10px;
    border: 1px solid #999999;
    float: left;
    height: 200px;
}
#items {
    clear: both;
}

td.yui-dt-col-description, td.yui-dt-col-date {
    font-size: 93%;
}

td.yui-dt-col-tags {
    font-size: 85%
}

</style>

<div id="yui-main">

    <div class="title">
       <h1>Tagulus Director</h1>
    </div>
      
    <div class="block yui-skin-sam">
           <div id='tagCloud1' class="tagCloud">
            </div>
            
            <div id='tagCloud2' class="tagCloud">
            </div>
            
            <div id='tagCloud3' class="tagCloud">
            </div>

            <div id="items">
            </div>
        
    </div>
</div>
<script src="/javascripts/TagClusters/TagMap.js"></script>
 <%= link_to_items_json @cloud %>
<script>
    
    var tcOptions = { sort : "alpha",
                      classes : 6,
                      data : {
                        limit : 50
                      },    
                      display : {
                        width: 300, 
                        font_distribution: "linear",
                        font_max: 18,
                        font_min: 8,
                        font_unit: "px",
                        colors : [[66,66,66],[80,80,80]],
                        opacity_max : 100,
                        opacity_min : 100,
                      }
                     };

    var baseTagMap  = new TagMap();
    
    cloud_items.items.forEach(function(item){
        baseTagMap.add(item, item.tags);
    });
    
    function getFrequencies(tagMap){
        return tagMap.tagNames().map(function(tag){
            return {tag: tag, frequency : tagMap.itemsForTag(tag).length};
        });
    }

    var tagClouds = [1,2,3].map(function(n){        
        return new TagCloud([], document.getElementById('tagCloud'+n), tcOptions);
    });
    var tagMaps = [];
    var selectedTags = [];
    //var selectedElements = [];
    
    tagMaps[0] = baseTagMap;
    tagClouds[0].setData(getFrequencies(tagMaps[0]));
    
    function SelectionBehaviour(){
        var selectedElement;
        this.onclick = function(tag, element){
            if(selectedElement){
              selectedElement.style.backgroundColor = "inherit";
            }
            selectedElement = element;
            selectedElement.style.backgroundColor = "#3E66B8";
        }
    }
    
    for(var i=0; i<tagClouds.length; i++){
       new function(tagCloud, i){
        tagCloud.behaviour.add(new SelectionBehaviour());
           tagCloud.behaviour.add({
            onclick : function(tag, element){
               //Udate next tagCloud
               tagMaps[i+1] = tagMaps[i].intersection(tag);
               if(tagClouds[i+1]){
                tagClouds[i+1].setData(getFrequencies(tagMaps[i+1]));
               }
               //Zero remaining clouds
               tagMaps = tagMaps.slice(0,i+2);
               for(var j=i+2; j<tagClouds.length ; j++){
                tagClouds[j].setData([]);
               }
               
               //Update dataTable
               itemsDataTable.getRecordSet().replaceRecords(tagMaps[tagMaps.length-1].allItems());
               itemsDataTable.refreshView();
            }
         });
       }(tagClouds[i], i);
    }
     
    
    var itemsDataTable;
    
     YAHOO.util.Event.addListener(window, "load", function() {
                    
                     var linkFormatter =function(elCell, oRecord, oColumn, oData) {
                            elCell.innerHTML = "<a href='"+oData.href+"' title='"+oData.description+"'>"+oData.description+"</a>"; 
                      } 
                    var dateFormatter = function(elCell, oRecord, oColumn, oData){
                        var date = YAHOO.util.DataSource.parseDate(oData.time);
                        elCell.innerHTML = date.getDate()+ "/" + (date.getMonth()+1) + "/" + date.getFullYear();
                    }
                    var myColumnDefs = [
                        {key:"data",  
                        formatter: dateFormatter,  
                        label: "Date", 
                        sortable: false, 
                        width: "5em", 
                        resizeable: false,
                        className: "yui-dt-col-date"},
                        
                        {key:"data",
                         formatter : linkFormatter, 
                         label: "Description",
                         sortable: false,
                         width: "35em",
                         resizeable: false,
                         className: "yui-dt-col-description"},
                         
                        {key:"tags",
                        label : "Tags",
                        sortable:false, 
                        width: "20em", 
                        resizeable: false},
                    ];
            
                    var myDataSource = new YAHOO.util.DataSource([]);
                    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSARRAY;
                    myDataSource.responseSchema = {
                        fields: ["tags", 
                                 "data", 
                        ]
                    };
                    
                    var configs = {
                        paginated:true, // Enables built-in client-side pagination
                        paginator:{ // Configurable options
                            containers: null, // Create container DIVs dynamically
                            currentPage: 1, // Show page 1
                            dropdownOptions: [25,50,100], // Show these in the rows-per-page dropdown
                            pageLinks: 8, // Show links to all pages
                            rowsPerPage: 50 // Show up to 500 rows per page
                        },
                    };
                    
                    itemsDataTable = new YAHOO.widget.DataTable("items",
                                myColumnDefs, myDataSource, configs);
                                
                    itemsDataTable.getRecordSet().replaceRecords(tagMaps[tagMaps.length-1].allItems());
                    itemsDataTable.refreshView();                                
                   
                  });
  </script>