<dl>
    <script>
        function Slider(prefix){
            this.min = 0;
            this.max = 100;
            this.width = 200;
            this.onchange = function(){};
            var newVal;
            var oldVal;
            var slider;
            
            this.emitHTML = function(){
                var width = this.width;
                document.write('<div class="slider" style="width: '+ (width + 60) + 'px">');
                document.write('<span id="'+prefix + '_min" style="position: relative; font-size: 8px; left: 6px;">0</span><span id="'+prefix + '_max" style="position: relative; left: ' +width + 'px; font-size: 8px">200</span>');
                document.write('<div id="'+prefix+'_sliderbg" style="background-image : url(/images/slider/small/horizBg.png); width : ' + (width + 16) + 'px; height: 16px; position: relative; top: 0px; cursor: pointer; ">');
                document.write('<div id="'+prefix + '_sliderthumb" style="position: relative; top: 0px !important; width: 16px; height: 16px;"><img id="'+prefix+'_sliderthumbimg" src="/images/slider/small/horizSlider.png" width="16" height="16"/></div>');
                document.write('</div>');
                document.write('<div id="'+prefix+'_slidervalue" style="position: relative; top: -16px; left: ' + (width + 8) + 'px; padding-left: 20px;">0</div>');
                document.write('</div>')
            }
            
            this.init = function(){
               document.getElementById(prefix + "_min").innerHTML = this.min;
               document.getElementById(prefix + "_max").innerHTML = this.max;
               slider = YAHOO.widget.Slider.getHorizSlider(prefix+"_sliderbg", prefix + "_sliderthumb", 0, this.width);
               slider.animate = true;
               slider.subscribe("change", bind(displayNewValue, this));
               slider.subscribe("slideEnd", bind(updateTagCloud, this));
            }
            
            this.setValue = function(val){
                slider.setValue(((val-this.min)/(this.max-this.min))*this.width);
            }
            
            function displayNewValue(offset){
               // determine the actual value from the offset
               newVal = Math.round(((offset/this.width)*(this.max-this.min))+this.min);
               document.getElementById(prefix + "_slidervalue").innerHTML = newVal;
            }
            
            function updateTagCloud(){
               if(oldVal!=newVal){
                    oldVal=newVal;
                    this.onchange(newVal);
                }
            }
        }
    </script>
    <script>
    var ColorPicker = function() {
        var Slider=YAHOO.widget.Slider;
        var Color=YAHOO.util.Color;
        var Dom=YAHOO.util.Dom;
    
        var pickerSize=180;
        
        var hue,picker,panel;
        
        var onOk = function(){};
    
        // hue, int[0,359]
        var getH = function() {
            var h = (pickerSize - hue.getValue()) / pickerSize;
            h = Math.round(h*360);
            return (h == 360) ? 0 : h;
        }
    
        // saturation, int[0,1], left to right
        var getS = function() {
            return picker.getXValue() / pickerSize;
        }
    
        // value, int[0,1], top to bottom
        var getV = function() {
            return (pickerSize - picker.getYValue()) / pickerSize;
        }
    
        var swatchUpdate = function() {
            var h=getH(), s=getS(), v=getV();
            YAHOO.log("hsv " + [h,s,v]);
    
            Dom.get("hval").value = h;
            Dom.get("sval").value = Math.round(s*100);
            Dom.get("vval").value = Math.round(v*100);
    
            var rgb = Color.hsv2rgb(h, s, v);
    
            var styleDef = "rgb(" + rgb.join(",") + ")";
            Dom.setStyle("swatch", "background-color", styleDef);
    
            Dom.get("rval").value = rgb[0];
            Dom.get("gval").value = rgb[1];
            Dom.get("bval").value = rgb[2];
    
            Dom.get("hexval").value = Color.rgb2hex(rgb[0], rgb[1], rgb[2]);
        };
    
        var hueUpdate = function(newOffset) {
            YAHOO.log("hue update: " + newOffset , "warn");
            var rgb = Color.hsv2rgb(getH(), 1, 1);
            var styleDef = "rgb(" + rgb.join(",") + ")";
            Dom.setStyle("pickerDiv", "background-color", styleDef);
    
            swatchUpdate();
        };
    
        pickerUpdate = function(newOffset) {
            YAHOO.log("picker update [" + newOffset.x + ", " + newOffset.y + "]" , "warn");
            swatchUpdate();
        };
        
        var okHandler = function(){
            var h=getH(), s=getS(), v=getV();
            var rgb = Color.hsv2rgb(h, s, v);
            onOk(rgb);
            hide();
        };
        
        var cancelHandler = function(){
           
           onOk = function(){};
           hide();
        }
        
        var hide = function(){
             var pickerEl = document.getElementById("ddPicker");
             pickerEl.style.visibility = "hidden";
        }

        
        return {
    
            init: function () {
                hue = Slider.getVertSlider("hueBg", "hueThumb", 0, pickerSize);
                hue.subscribe("change", hueUpdate);
    
                picker = Slider.getSliderRegion("pickerDiv", "selector", 
                        0, pickerSize, 0, pickerSize);
                picker.subscribe("change", pickerUpdate);
    
                hueUpdate(0);
                
                btnOk = document.getElementById("btnOk");
                btnOk.addEventListener("click", okHandler, true)
                
                btnCancel = document.getElementById("btnCancel");
                btnCancel.addEventListener("click", cancelHandler, true)
        
                panel = new YAHOO.util.DD("ddPicker");
                panel.setHandleElId("pickerHandle");
        
                }
            ,
            show : function(color, callback){
                onOk = callback;
                var pickerEl = document.getElementById("ddPicker");
                pickerEl.style.visibility = "visible";
            }
        }
    }();
        
        YAHOO.util.Event.on(window, "load", ColorPicker.init);
    </script>
<dt>Cloud Settings</dt>
<dd>
    <dl id="cloud-settings" class="collapsable">
        <dt>Limit</dt>
        <dd><script>
            var f = function(){
                var slider = new Slider("limit");
                slider.min = 0;
                slider.max = tc.tags.length;
                slider.width = 200;
                slider.emitHTML();
                slider.onchange = function(val){
                      tc.options.limit = val;
                      tc.update();
                }
                window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.options.limit)}, true);
            };
            f();
            </script>   
        </dd>
    
        
        <dt>Sort Function</dt>
        <dd>
        <ul class="radiolist">
        <li><input type="radio" name="sort_function" value="Random" checked="true" onchange="tc.options.sort='random'; tc.replaceElement(document.getElementById('tagCloud'))">Random</input>
        </li>
        <li><input type="radio" name="sort_function" value="Weighted" onchange="tc.options.sort='weighted'; tc.replaceElement(document.getElementById('tagCloud'))">Weighted</input>
        </li>
        <li><input type="radio" name="sort_function" value="Alpha" onchange="tc.options.sort='alpha'; tc.replaceElement(document.getElementById('tagCloud'))">Alpha</input>
        </li>
        </ul>
        </dd>
        <dt>Display Order</dt>
        <dd>
            <ul class="radiolist">
            <li><input type="radio" name="sort_order" value="Normal" onchange="tc.options.sort_order = 'normal'; tc.replaceElement(document.getElementById('tagCloud'))">Normal</input>
            </li>
            <li><input type="radio" name="sort_order" value="Centered" onchange="tc.options.sort_order = 'center'; tc.replaceElement(document.getElementById('tagCloud'))">Centered</input>
            </li>
            <li><input type="radio" name="sort_order" value="Reversed" onchange="tc.options.sort_order = 'reverse'; tc.replaceElement(document.getElementById('tagCloud'))">Reversed</input>
            </li>
            </ul>
        </dd>
        
        <dt>Weight</dt>
        <dd>
        <ul class="radiolist">
        <li><input type="radio" name="tag_weight" value="Linear" onchange="tc.options.weight='linear'; tc.replaceElement(document.getElementById('tagCloud'))">Linear</input>
        </li>
        <li><input type="radio" name="tag_weight" value="Logarithmic" onchange="tc.options.weight='log'; tc.replaceElement(document.getElementById('tagCloud'))">Logarithmic</input>
        </li>
        </ul>
        </dd>
        
        <dt>Classes</dt>
        <dd>
            <script>
            var f = function(){
                var slider = new Slider("classes");
                slider.min = 1;
                slider.max = 10;
                slider.width = 200;
                slider.emitHTML();
                slider.onchange = function(val){
                      tc.options.classes = val;
                      tc.update();
                }
                window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.options.classes)}, true);
            };
            f();
            </script>
        </dd>
    </dl>
</dd>


<dt>Display Settings</dt>
<dd>
    <dl>
        <dt>Width</dt>
        <dd>
            <script>
            var f = function(){
                var slider = new Slider("width");
                slider.min = 0;
                slider.max = 1200;
                slider.width = 200;
                slider.emitHTML();
                slider.onchange = function(val){
                      tc.display.setWidth(val);
                }
                window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.display.options.width)}, true);
            };
            f();
            </script>
                        
        </dd>
    </dl>
</dd>
<dd></dd>
    <dt>Tag Classes</dt>
     <dd>
         <div id="tagPreview">
             
         </div>      
         <script>
                connect(tc.display, 'recalculate', function(){
                     var previewStr = "";
                     var classes =tc.options.classes;
                     for(var i=0; i<classes; i++){
                        var d =  (classes-i)/classes;
                        var color = tc.display.colorDistribution(d);
                        color = color.map(Math.floor);
                        previewStr += "<span  class='previewClass'  style='font-size: "+tc.display.fontDistribution(d) + "px; opacity: " + tc.display.opacityDistribution(d) + ";color: rgb(" + color[0] + "," + color[1] + "," + color[2]  + ");'>A</span>";    
                     }
                     document.getElementById("tagPreview").innerHTML = previewStr;                    
                });
            </script>  
       <dl>
        <dt>Font Size</dt>
        <dd>
            <div id="fontPreview">
                
            </div>
            <script>
                connect(tc.display, 'recalculate', function(){
                     var previewStr = "";
                     var classes =tc.options.classes;
                     for(var i=0; i<classes; i++){
                        var d =  (classes-i)/classes;
                        previewStr += "<span  class='previewClass'  style='font-size: "+tc.display.fontDistribution(d) + "px'>A</span>";    
                     }
                     document.getElementById("fontPreview").innerHTML = previewStr;                    
                });
            </script>
            <div id="fontMin" style="float: left">
            <h3>Min</h3>
            <script>
                function f(){
                    var slider = new Slider("font_min");
                    slider.min = 2;
                    slider.max = 64;
                    slider.width = 100;
                    slider.emitHTML();
                    slider.onchange = function(val){
                         tc.display.options.font_min = val;
                         tc.display.redisplay();
                    }
                    window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.display.options.font_min)}, true);
                }
                f();
            </script>
            </div>

            <div id="fontMax" style="float: left">
            <h3>Max</h3>
            <script>
                function f(){
                    var slider = new Slider("font_max");
                    slider.min = 2;
                    slider.max = 64;
                    slider.width = 100;
                    slider.emitHTML();
                    slider.onchange = function(val){
                         tc.display.options.font_max = val;
                         tc.display.redisplay();
                    }
                    window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.display.options.font_max)}, true);
                }
                f();
            </script>            
            </div>

        </dd>
        <dt style="clear: left">Opacity</dt>
        <dd>
            <div id="opacityPreview">
                
            </div>
            <script>
                connect(tc.display, 'recalculate', function(){
                     var previewStr = "";
                     var classes =tc.options.classes;
                     for(var i=0; i<classes; i++){
                        var d =  (classes-i)/classes;
                        previewStr += "<span class='previewClass' style='font-size: " + tc.display.options.font_max + "px; opacity: "+tc.display.opacityDistribution(d)/100 + "'>A</span>";    
                     }
                     document.getElementById("opacityPreview").innerHTML = previewStr;                    
                });
            </script>
            <div id="opacityMin" style="float: left">
            <h3>Min</h3>
            <script>
                function f(){
                    var slider = new Slider("opacity_min");
                    slider.min = 0;
                    slider.max = 100;
                    slider.width = 100;
                    slider.emitHTML();
                    slider.onchange = function(val){
                         tc.display.options.opacity_min = val;
                         tc.display.redisplay();
                    }
                    window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.display.options.opacity_min)}, true);
                }
                f();
            </script>
            </div>
            <div id="opacityMax" style="float: left">
            
            <h3>Max</h3>
            <script>
                function f(){
                    var slider = new Slider("opacity_max");
                    slider.min = 0;
                    slider.max = 100;
                    slider.width = 100;
                    slider.emitHTML();
                    slider.onchange = function(val){
                         tc.display.options.opacity_max = val;
                         tc.display.redisplay();
                    }
                    window.addEventListener("load", function(){ slider.init(); slider.setValue(tc.display.options.opacity_max)}, true);
                }
                f();
            </script>    
            </div>
        </dd>
        
        <dt style="clear: left">Color</dt>
        <dd>
            <div id="colorPreview">
                
            </div>
            <script>
                connect(tc.display, 'recalculate', function(){
                     var previewStr = "";
                     var classes =tc.options.classes;
                     for(var i=0; i<classes; i++){
                        var d =  (classes-i)/classes;
                        var color = tc.display.colorDistribution(d);
                        color = color.map(Math.floor)
                        //alert("color " + color);
                        previewStr += "<span class='previewClass' style='font-size: 18pt; color: rgb(" + color[0] + "," + color[1] + "," + color[2]  + ");'>A</span>";    
                     }
                     document.getElementById("colorPreview").innerHTML = previewStr;                    
                });
            </script>
            <div id="color1" style="float: left; margin-right: 20px;">
            <h3>Color 1</h3>
                <div class="swatch" id="color1Swatch" style="width: 80px; height: 50px; background-color: #000000; border: 1px solid black; margin-bottom: 10px; cursor: pointer;" >
                &nbsp;                            
                </div>
                <script>
                  function Swatch(id, color){
                      var swatch = document.getElementById(id);
                      function updateSwatch(rgb){
                          swatch.style.backgroundColor = "rgb(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + ")";
                          tc.display.options.colors[color] = rgb;
                          tc.display.redisplay(); 
                      };
                      function initSwatch(){
                          var rgb = tc.display.options.colors[color];
                          swatch.style.backgroundColor = "rgb(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + ")";
                      };
                      swatch.addEventListener("click", function(){ ColorPicker.show(null, updateSwatch)}, true);
                      window.addEventListener("load", initSwatch, true);
                  };
                  new Swatch("color1Swatch", 1);
                    
                </script>
            </div>
            <div id="color2" style="float: left;">
            <h3>Color 2</h3>
                <div class="swatch" id="color2Swatch" style="width: 80px; height: 50px; background-color: #000000; border: 1px solid black; margin-bottom: 10px; cursor: pointer;">
                &nbsp;                            
                </div>
                <script>
                    new Swatch("color2Swatch", 0);
                </script>
                
            </div>
        </dd>

    </dl>
</dd>
</dl>

<br style="clear: both"/>

<style type="text/css">
 #ddPicker { position: absolute; background-color: #eeeeee;  width: 380px; height: 260px; top: 40%; left: 40%; visibility: hidden;}
 #ddPicker input { font-size: .85em }
 #pickerHandle { background-color: #bbbbbb; height: 10px; cursor: move; }
 #hueThumb { cursor:default; width:18px; height:18px; z-index: 9; position:absolute; }
 #hueBg {-moz-outline: none; outline:0px none; position:absolute; left:216px; height:198px; width:18px; background:url(/images/colorpicker/hue.png) no-repeat; top:18px; }
 #pickerDiv {-moz-outline: none; outline: 0px; position: absolute; height:187px; width:188px; background-color:#FF0000; top:20px; }
 #pickerbg { position: absolute; z-index: 1; top:0px; left:0px; }
 #selector { cursor:default; width:11px; height:11px; z-index: 9; position:absolute; top:0px; left:0px; }
 #valdiv { text-align:left; position:absolute; top: 86px; left:246px; }
 #valdiv input{width: 2em;}
 input#hexval{ width: 4em; }
 #swatch { position:absolute; left:260px; top:30px; height:60px; width:60px; border:2px solid #aaaaaa; }
 #buttonsDiv {
     position: absolute;
     bottom: 10px;
     right: 20px;
 }
 
 #buttonsDiv input{
     width: 5em;
 }    
</style>

<div id="ddPicker">
    <div id="pickerHandle">&nbsp;</div>
    <div id="pickerDiv" tabindex="-1" hidefocus="true">

      <img id="pickerbg" src="/images/colorpicker/pickerbg.png" alt="" />
      <div id="selector"><img src="/images/colorpicker/select.gif" /></div> 
    </div>

     <div id="hueBg" tabindex="-1" hidefocus="true">
      <div id="hueThumb"><img src="/images/colorpicker/hline.png" /></div> 
    </div> 

    <div id="valdiv">
        <form name="rgbform">
        <br />
        R <input autocomplete="off" name="rval" id="rval" type="text" value="0" size="3" maxlength="3" />

        H <input autocomplete="off" name="hval" id="hval" type="text" value="0" size="3" maxlength="3" />
        <br />
        G <input autocomplete="off" name="gval" id="gval" type="text" value="0" size="3" maxlength="3" />
        S <input autocomplete="off" name="gsal" id="sval" type="text" value="0" size="3" maxlength="3" />
        <br />
        B <input autocomplete="off" name="bval" id="bval" type="text" value="0" size="3" maxlength="3" />
        V <input autocomplete="off" name="vval" id="vval" type="text" value="0" size="3" maxlength="3" />
        <br />
        <br />
        # <input autocomplete="off" name="hexval" id="hexval" type="text" value="0" size="6" maxlength="6" />
        <br />

        </form>
    </div>
    
     <div id="swatch">&nbsp;</div>
    <div id="buttonsDiv">
            <form name="buttonsform">
                <input name="ok" id="btnOk" type="button" value="OK"/>
                <input name="cancel" id="btnCancel" type="button" value="Cancel"/>
            </form>
    </div>
</div>
